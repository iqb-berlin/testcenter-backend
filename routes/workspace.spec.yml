openapi: 3.0.0

info:
  title: ""
  version: "%%%VERSION%%%"

paths:
  /workspace/{ws_id}/file/{type}/{filename}:
    get:
      summary: get file
      description: retrieves a file form a given workspace by filename
      tags:
        - admin download
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          schema:
            $ref: './components.spec.yml#/components/schemas/auth'
          example: "a:user000000000.ro00000000"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          schema:
            type: integer
          required: true
        - in: path
          name: type
          description: file type - Testtakers | Booklet | Resource | Unit | SysCheck - CASE SENSITIVE!
          example: Unit
          required: true
          schema:
            type: string
        - in: path
          name: filename
          description: filename. - CASE SENSITIVE!
          example: SAMPLE_UNIT.XML
          required: true
          schema:
            type: string

      responses:
        "200":
          description: File contents
        "404":
          description: workspace or file not found
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/responses:
    delete:
      summary: delete data
      description: deletes all results and monitor data of a group of groups
      tags:
        - admin workspace
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role "RW" (read/write) for this workspace
          example: "a:user000000000.rw00000000"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer

      requestBody:
        content:
          application/json:
            schema:
              properties:
                groups:
                  type: array
                  description: array of group names
                  items:
                    type: string
            example:
              groups:
                - sample_group

      responses:
        "200":
          description: OK
        "404":
          description: workspace or file not found
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/results:
    get:
      summary: get results
      description: retrieves a list of unit- and booklet results for a given workspace and groups
      tags:
        - admin workspace
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer

      responses:
        "200":
          description: OK, list of results
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    groupname:
                      type: string
                    bookletsStarted:
                      type: integer
                    num_units_min:
                      type: string
                    num_units_max:
                      type: string
                    num_units_total:
                      type: string
                    lastchange:
                      type: string
                      description: timestamp
                    num_units_mean:
                      type: integer
              example:
                - groupname: sample_group
                  bookletsStarted: 1
                  num_units_min: '1'
                  num_units_max: '1'
                  num_units_total: '1'
                  lastchange: '1567776853037'
                  num_units_mean: 1
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "404":
          description: Workspace not found
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/file: # gets manipulated in hooks.file, change summary carefully
    post:
      summary: upload file
      description: |-
        Uploads a Resource, Unit, Booklet, SysCheck or Testtakers file. The File gets imported to the workspace if it
        is valid, and passes the cross-validation checks. So a file which depends of a non-existing player will get
        rejected as well as an invalid xml file.

        When a file with the same filename and type exists in the workspace, it gets overwritten! Except if the
        internal id (the <ID>-Tag as used in Unit-files for example) of the old and the new file differs. In this case
        it's assumed, that the file-name-duplication is inintentional and the new import gets rejected.

        The endpoint accepts all kinds of files. Zip-archives get extracted an treated the same as multi-file-upload.
      tags:
        - admin upload
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role "RW" (read/write) for this workspace
          example: "a:user000000000.rw00000000"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileforvo:
                  type: string
                  description: upload file
                  example:
                    "(content of Unit.xml)"
              required:
                - fileforvo
      responses:
        "201":
          description: Upload Successful
          content:
            application/json:
              example:
                "SAMPLE_UNIT.XML":
                  "warning":
                    - 'File of name `SAMPLE_UNIT.XML` did already exist and was overwritten.'
        "207":
          description: Upload Successful, import of one or more files was rejected
          content:
            application/json:
              example:
                SAMPLE_UNIT.XML:
                  error:
                    - 'Invalid root-tag: `Invalid`'
        "400":
          description: file could not be uploaded or is invalid.
        "404":
          description: workspace not found
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "413":
          description: File too large
        "500":
          description: Server Error

  /workspace/{ws_id}/files:
    get:
      summary: get files of workspace
      description: get a list of all files in workspace
      tags:
        - admin workspace
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer

      responses:
        "200":
          description: OK, a list of files
          content:
            application/json:
              schema:
                $ref: './components.spec.yml#/components/schemas/file_list'
              example: # TODO add schema
                Resource:
                  - name: sample_resource_package.itcr.zip
                    size: 412
                    modificationTime: 1627545600
                    type: Resource
                    id: SAMPLE_RESOURCE_PACKAGE.ITCR.ZIP
                    report:
                      error:
                        - "Could not read archive: Could not extract archive"
                    info: []
                  - name: SAMPLE_UNITCONTENTS.HTM
                    size: 13392
                    modificationTime: 1615970109
                    type: Resource
                    id: SAMPLE_UNITCONTENTS.HTM
                    report: []
                    info: []
                  - name: verona-player-simple-4.0.0.html
                    size: 29960
                    modificationTime: 1615970109
                    type: Resource
                    id: VERONA-PLAYER-SIMPLE-4.0.0.HTML
                    report:
                      info:
                        - 'Verona-Version: 3.0.0'
                    info:
                      veronaVersion: "4.0"
                      playerId: "verona-player-simple"
                      description: "This is a simple, dependency-less, vanilla-js-written, but full-featured unit player, mainly as showcase for developers and for software-testing. It does implement the Verona 4.0.0-Standard and can be used for units containing simple any content in HTML-format. Unit Description ist the <code>form-content as HTML. Just give some names to the form element, and the player does the rest. Use some special Ids for some special buttons."
                      label: "Simple HTML Player"
                Unit:
                  - name: SAMPLE_UNIT.XML
                    size: 497
                    modificationTime: 1615970109
                    type: Unit
                    id: UNIT.SAMPLE
                    report: []
                    info:
                      description: This is a sample unit showing the possibilities of the sample player.
                      label: A sample unit
                      totalSize: 13889
                  - name: SAMPLE_UNIT2.XML
                    size: 1737
                    modificationTime: 1615970109
                    type: Unit
                    id: UNIT.SAMPLE-2
                    report: []
                    info:
                      description: This is an Unit
                      label: A sample unit
                      totalSize: 1737
                Booklet:
                  - name: SAMPLE_BOOKLET.XML
                    size: 1404
                    modificationTime: 1615970109
                    type: Booklet
                    id: BOOKLET.SAMPLE-1
                    report: []
                    info:
                      description: This a sample booklet for testing/development/showcase purposes.
                      label: Sample booklet
                      totalSize: 60879
                  - name: SAMPLE_BOOKLET2.XML
                    size: 564
                    modificationTime: 1615970109
                    type: Booklet
                    id: BOOKLET.SAMPLE-2
                    report: []
                    info:
                      label: Reduced Booklet
                      totalSize: 46150
                  - name: SAMPLE_BOOKLET3.XML
                    size: 1284
                    modificationTime: 1615970109
                    type: Booklet
                    id: BOOKLET.SAMPLE-3
                    report: []
                    info:
                      description: "\n      This booklet has the same species as sample Booklet 1. The
                      term booklet species indicates that both booklets can\n      be controlled by
                      the group-monitor as if they where the same.\n      The species is currently
                      defined as having the same number of testlets on the first level (called blocks).
                      This\n      definition may change later.\n    "
                      label: Similar Booklet to Sample 1
                      totalSize: 60759
                Testtakers:
                  - name: SAMPLE_TESTTAKERS.XML
                    size: 2180
                    modificationTime: 1615970109
                    type: Testtakers
                    id: SAMPLE_TESTTAKERS.XML
                    report: []
                    info:
                      description: This file contains some logins for testing and works a a sample for
                        developers.
                      testtakers: 10
                SysCheck:
                  - name: SAMPLE_SYSCHECK.XML
                    size: 1239
                    modificationTime: 1615970109
                    type: SysCheck
                    id: SYSCHECK.SAMPLE
                    report: []
                    info:
                      description: An example SysCheck definition with long description
                      label: An example SysCheck definition

        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "404":
          description: Workspace not found
        "410":
          description: Session Expired
        "500":
          description: Server Error
    delete:
      summary: delete files
      description: deletes files from a workspace
      tags:
        - admin workspace
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role "RW" (read/write) for this workspace
          example: "a:user000000000.rw00000000"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                f:
                  type: array
                  description: array of file names
                  items:
                    type: string
            example:
              f:
                - "SysCheck/SAMPLE_SYSCHECK.XML"
                - "Unit/SAMPLE_UNIT.XML"
                - "some rubbish"
                - "a/b"
                - "../../README.md"
      responses:
        "207":
          description: OK, a list of files
          content:
            application/json:
              example:
                deleted:
                  - "SysCheck/SAMPLE_SYSCHECK.XML"
                did_not_exist:
                  - "some rubbish"
                  - "a/b"
                not_allowed:
                  - "../../README.md"
                was_used:
                  - "Unit/SAMPLE_UNIT.XML"
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "404":
          description: Workspace not found
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace:
    put:
      summary: add a workspace
      description: adds a workspace with given name
      tags:
        - super admin
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with super-admin privilege
          example: "a:user000000000.superadmin0"

      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: workspace name
              required:
                - name
            example:
              name: "new work space"

      responses:
        "201":
          description: OK, workspace has been added
        "401":
          description: Not authenticated
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}:
    get:
      summary: get workspace
      description: returns basic information about a workspace
      tags:
        - super admin
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with super-admin privilege
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK, workspace info
          content:
            application/json:
              example:
                id: 1
                name: example_workspace
                role: "RW"
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error


    patch:
      summary: rename a workspace
      description: renames a workspace with given id
      tags:
        - super admin
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with super-admin privilege
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer

      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Password
              required:
                - n
            example:
              name: "a new york space"

      responses:
        "200":
          description: OK, workspace has been renamed
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/users:
    patch:
      summary: change user roles
      description: changes user roles in given workspaces
      tags:
        - super admin
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with super-admin privilege
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer

      requestBody:
        content:
          application/json:
            schema:
              properties:
                u:
                  type: array
                  description: array of pairs role-id
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: user-id
                      role:
                        type: string # because dredd does not support enum
                        description: "role: 'RW', 'MO' or 'RO'"
              required:
                - u
            example:
              u:
                - role: RW
                  id: 1
      responses:
        "200":
          description: OK, roles has been updated
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

    get:
      summary: get a list of users in a workspace
      description: returns info about all registered users in a workspace.
      tags:
        - super admin
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with super-admin privilege
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer

      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                $ref: './components.spec.yml#/components/schemas/user_list'
              example:
                - name: super
                  id: '1'
                  selected: true
                  role: 'RW'
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/report/log:
    get:
      summary: get report of logs
      description: returns a Log report in JSON or CSV format based on aggregated unit and booklet log data
      tags:
        - admin download
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
        - in: query
          name: dataIds
          description: a comma separated list of report data-ids
          schema:
            type: array
            items:
              type: string
          example: [review_group, sample_group]
      responses:
        "200":
          description: Log report in JSON or CSV format based on aggregated unit and booklet log data.
          content:
            text/csv;charset=UTF-8:
              schema:
                type: string
              example: |-
                groupname;loginname;code;bookletname;unitname;timestamp;logentry
                "sample_group";"test";"xxx";"BOOKLET.SAMPLE-1";"UNIT.SAMPLE";"1627545600";sample unit log
                "sample_group";"test";"xxx";"BOOKLET.SAMPLE-1";"";"1627545600";sample log entry
            application/json:
              schema:
                $ref: '#/components/schemas/LogReport'
              example: [{"groupname":"sample_group","loginname":"test","code":"xxx","bookletname":"BOOKLET.SAMPLE-1","unitname":"UNIT.SAMPLE","timestamp":"1627545600","logentry":"sample unit log"},{"groupname":"sample_group","loginname":"test","code":"xxx","bookletname":"BOOKLET.SAMPLE-1","unitname":"","timestamp":"1627545600","logentry":"sample log entry"}]
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/report/response:
    get:
      summary: get report of item responses
      description: returns a Item Responses report in JSON or CSV format based on aggregated report data
      tags:
        - admin download
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
        - in: query
          name: dataIds
          description: a comma separated list of report data-ids
          schema:
            type: array
            items:
              type: string
          example: [review_group,sample_group]
      responses:
        "200":
          description: Item Responses report in JSON or CSV format based on aggregated response data.
          content:
            text/csv;charset=UTF-8:
              schema:
                type: string
              example: |-
                groupname;loginname;code;bookletname;unitname;responses;laststate
                "sample_group";"test";"xxx";"BOOKLET.SAMPLE-1";"UNIT.SAMPLE";"[{""id"":""all"",""content"":""{\""name\"":\""Sam Sample\"",\""age\"":34}"",""ts"":1627545600,""responseType"":""example-data-format""}]";"{""PRESENTATIONCOMPLETE"":""yes""}"
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseReport'
              example: [
                {
                  "groupname": "sample_group",
                  "loginname": "test",
                  "code": "xxx",
                  "bookletname": "BOOKLET.SAMPLE-1",
                  "unitname": "UNIT.SAMPLE",
                  "responses": [
                    {
                      "id": "all",
                      "content": "{\"name\":\"Sam Sample\",\"age\":34}",
                      "ts": 1627545600,
                      "responseType": "example-data-format"
                    }
                  ],
                  "laststate": "{\"PRESENTATIONCOMPLETE\":\"yes\"}"
                }
              ]
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/report/review:
    get:
      summary: get report of item reviews
      description: returns a Review report in JSON or CSV format based on aggregated unit and booklet review data
      tags:
        - admin download
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
        - in: query
          name: dataIds
          description: a comma separated list of report data-ids
          schema:
            type: array
            items:
              type: string
          example: [review_group, sample_group]
      responses:
        "200":
          description: Reviews report in JSON or CSV format based on aggregated unit and booklet review data.
          content:
            text/csv;charset=UTF-8:
              schema:
                type: string
              example: |-
                groupname;loginname;code;bookletname;unitname;priority;reviewtime;entry
                "sample_group";"test";"xxx";"BOOKLET.SAMPLE-1";"UNIT.SAMPLE";"1";"2021-07-29 10:00:00";"this is a sample unit review"
                "sample_group";"test";"xxx";"BOOKLET.SAMPLE-1";"";"1";"2021-07-29 10:00:00";"sample booklet review"
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewReport'
              example: [{"groupname":"sample_group","loginname":"test","code":"xxx","bookletname":"BOOKLET.SAMPLE-1","unitname":"UNIT.SAMPLE","priority":"1","reviewtime":"2021-07-29 10:00:00","entry":"this is a sample unit review"},{"groupname":"sample_group","loginname":"test","code":"xxx","bookletname":"BOOKLET.SAMPLE-1","unitname":"","priority":"1","reviewtime":"2021-07-29 10:00:00","entry":"sample booklet review"}]
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/report/sys-check:
    get:
      summary: get report of system checks
      description: returns a System Check report in JSON or CSV format based on aggregated report data
      tags:
        - admin download
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
        - in: query
          name: dataIds
          description: a comma separated list of report data-ids
          schema:
            type: array
            items:
              type: string
          example: [SYSCHECK.SAMPLE]
      responses:
        "200":
          description: System Checks report in JSON or CSV format based on aggregated system check data.
          content:
            text/csv;charset=UTF-8:
              schema:
                type: string
              example: |-
                "Titel";"SysCheck-Id";"SysCheck";"DatumTS";"Datum";"FileName";"Betriebsystem";"Betriebsystem-Version";"Bildschirm-Auflösung";"Browser";"Browser-Cookies aktiviert";"Browser-Plugins:";"Browser-Sprache";"Browser-Version";"CPU-Architektur";"CPU-Kerne";"Fenster-Größe";"Downloadgeschwindigkeit";"Downloadgeschwindigkeit benötigt";"Downloadbewertung";"Uploadgeschwindigkeit";"Uploadgeschwindigkeit benötigt";"Uploadbewertung";"Gesamtbewertung";"RoundTrip in Ms";"Netzwerktyp nach Leistung";"Downlink MB/s";"Name";"Who am I?";"Why so serious?";"Check this out";"All we here is";"loading time"
                "SAMPLE SYS-CHECK REPORT";"SYSCHECK.SAMPLE";"An example SysCheck definition";"1627545600";"2021-07-29 10:00:00";"SAMPLE_SYSCHECK-REPORT.JSON";"Linux";"x86_64";"1680 x 1050";"Chrome";"1";"Chromium PDF Plugin, Chromium PDF Viewer";"en-US";"79";"amd64";"8";"1680 x 914";"75.72 Mbit/s";"8.19 kbit/s";"good";"2.84 Mbit/s";"8.19 kbit/s";"good";"good";"100";"4g";"1.45";"Sam Sample";"Harvy Dent";"Because.";"1";"Radio Gaga";"1594.295166015625"
            application/json:
              schema:
                $ref: '#/components/schemas/SysCheckReport'
              example:
                [{"date":"2020-02-17 13:01:31","checkId":"SYSCHECK.SAMPLE","checkLabel":"An example SysCheck definition","title":"SAMPLE SYS-CHECK REPORT","environment":[{"id":"0","type":"environment","label":"Betriebsystem","value":"Linux","warning":false},{"id":"0","type":"environment","label":"Betriebsystem-Version","value":"x86_64","warning":false},{"id":"0","type":"environment","label":"Bildschirm-Aufl\u00f6sung","value":"1680 x 1050","warning":false},{"id":"0","type":"environment","label":"Browser","value":"Chrome","warning":false},{"id":"0","type":"environment","label":"Browser-Cookies aktiviert","value":true,"warning":false},{"id":"0","type":"environment","label":"Browser-Plugins:","value":"Chromium PDF Plugin, Chromium PDF Viewer","warning":false},{"id":"0","type":"environment","label":"Browser-Sprache","value":"en-US","warning":false},{"id":"0","type":"environment","label":"Browser-Version","value":"79","warning":false},{"id":"0","type":"environment","label":"CPU-Architektur","value":"amd64","warning":false},{"id":"0","type":"environment","label":"CPU-Kerne","value":8,"warning":false},{"id":"0","type":"environment","label":"Fenster-Gr\u00f6\u00dfe","value":"1680 x 914","warning":false}],"network":[{"id":"0","type":"network","label":"Downloadgeschwindigkeit","value":"75.72 Mbit\/s","warning":false},{"id":"0","type":"network","label":"Downloadgeschwindigkeit ben\u00f6tigt","value":"8.19 kbit\/s","warning":false},{"id":"0","type":"network","label":"Downloadbewertung","value":"good","warning":false},{"id":"0","type":"network","label":"Uploadgeschwindigkeit","value":"2.84 Mbit\/s","warning":false},{"id":"0","type":"network","label":"Uploadgeschwindigkeit ben\u00f6tigt","value":"8.19 kbit\/s","warning":false},{"id":"0","type":"network","label":"Uploadbewertung","value":"good","warning":false},{"id":"0","type":"network","label":"Gesamtbewertung","value":"good","warning":false},{"id":"0","type":"network","label":"RoundTrip in Ms","warning":false,"value":"100"},{"id":"0","type":"network","label":"Netzwerktyp nach Leistung","warning":false,"value":"4g"},{"id":"0","type":"network","label":"Downlink MB\/s","warning":false,"value":"1.45"}],"questionnaire":[{"id":"2","type":"string","label":"Name","value":"Sam Sample","warning":false},{"id":"3","type":"select","label":"Who am I?","value":"Harvy Dent","warning":false},{"id":"4","type":"text","label":"Why so serious?","value":"Because.","warning":false},{"id":"5","type":"check","label":"Check this out","value":true,"warning":false},{"id":"6","type":"radio","label":"All we here is","value":"Radio Gaga","warning":false}],"unit":[{"id":"0","type":"unit\/player","label":"loading time","value":"1594.295166015625","warning":false}],"fileData":[{"id":"date","label":"DatumTS","value":"1627545600"},{"id":"datestr","label":"Datum","value":"2021-07-29 10:00:00"},{"id":"filename","label":"FileName","value":"SAMPLE_SYSCHECK-REPORT.JSON"}]}]
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error


  /workspace/{ws_id}/sys-check/reports:
    delete:
      summary: delete system check reports
      description: deletes some System Check reports
      tags:
        - admin workspace
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role "RW" (read/write) for this workspace
          example: "a:user000000000.rw00000000"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                checkIds:
                  type: array
                  description: array of sys-check-Ids
                  items:
                    type: string
              required:
                - checkIds
            example:
              checkIds:
                - "SYSCHECK.SAMPLE"
      responses:
        "207":
          description: OK, a list of deleted files
          content:
            application/json:
              example:
                deleted:
                  - "SysCheck/SAMPLE_SYSCHECK.XML"
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error


  /workspace/{ws_id}/sys-check/reports/overview:

    get:
      summary: get a list of all system check reports
      description: returns a list of all sys-check-reports with most important features grouped by the sys-checks.
      tags:
        - admin workspace
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for admin-user with role at least "RO" (read only) for this workspace
          example: "a:user000000000.superadmin0"
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of digests of Sys-Check-Reports
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: aggregations of sys-check-reports to a specific report
                  properties:
                    id:
                      type: string
                      description: id of the *SysCheck* to which theese reports belongs
                    count:
                      type: number
                      description: number of aggregated sys-check-reports
                    label:
                      type: string
                      description: label of the SysCheck
                    details:
                      type: object
                      description: assoc containing statistics over most important report-fields in the form feature - nummer of occurances
              example:
                - id: SYSCHECK.SAMPLE
                  count: 1
                  label: An example SysCheck definition
                  details:
                    os:
                      Linux x86_64: 1
                    browser:
                      Chrome 79: 1
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "410":
          description: Session Expired
        "500":
          description: Server Error

  /workspace/{ws_id}/sys-check/{sys_check_name}:
    get:
      summary: get system check configuration
      description: returns a specific SysCheck configuation **this endpoint does not need any authetication!**
      tags:
        - session management
      parameters:
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
        - in: path
          name: sys_check_name
          description: name of the SysCheck (as stored in the XML)
          example: 'SYSCHECK.SAMPLE'
          required: true
          schema:
            type: string
      responses:
        200:
          description: Configuation of a SysCheck (as JSON, not as plain XML)
          content:
            application/json:
              schema:
                $ref: './components.spec.yml#/components/schemas/sys_check'
        "404":
          description: No SysCheck with that name found on Workspace
        "500":
          description: Server Error

  /workspace/{ws_id}/sys-check/{sys_check_name}/unit-and-player:
    get:
      summary: get system check Unit and Player
      description: "returns a container with the unit and it's player according to a SysCheck"
      tags:
        - run system check
      parameters:
        - in: path
          name: ws_id
          description: workspace-id
          example: 1
          required: true
          schema:
            type: integer
        - in: path
          name: sys_check_name
          description: name of the SysCheck (as stored in the XML)
          example: 'SYSCHECK.SAMPLE'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A container with the unit and it's player
          # TODO load files into example data
        "404":
          description: No SysCheck with that name found on Workspace
        "500":
          description: Server Error

  /workspace/{ws_id}/sys-check/{sys_check_name}/report:
    put:
      summary: save system check
      description: save the results of a performed SysCheck
      tags:
        - run system check
      parameters:
      - in: path
        name: ws_id
        description: workspace-id
        example: 1
        required: true
        schema:
          type: integer
      - in: path
        name: sys_check_name
        description: name of the SysCheck (as stored in the XML)
        example: 'SYSCHECK.SAMPLE'
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              keyPhrase: saveme
              title: dsk
              environment:
              - id: '0'
                type: environment
                label: Betriebsystem
                value: Linux
                warning: false
              - id: '0'
                type: network
                label: Downloadgeschwindigkeit
                value: 68.01 Mbit/s
                warning: false
              questionnaire: []
              unit:
                - id: '0'
                  type: unit/player
                  label: loading time
                  value: '27'
                  warning: false
      responses:
        "201":
          description: Ok, Report saved
        "404":
          description: No SysCheck with that name found on Workspace
        "500":
          description: Server Error

